#BlueJ class context
comment0.params=questionNumLocal
comment0.target=Level1(int)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Level1.\r\n\ \r\n
comment1.params=
comment1.target=void\ prepare()
comment10.params=string\ length
comment10.target=java.lang.String\ fixedLengthString(java.lang.String,\ int)
comment2.params=filename
comment2.target=void\ loadRound(java.lang.String)
comment3.params=filename
comment3.target=java.util.ArrayList\ loadFile(java.lang.String)
comment4.params=s
comment4.target=void\ printText(java.lang.String)
comment5.params=
comment5.target=void\ printLines()
comment6.params=lineno
comment6.target=void\ printLine(int)
comment7.params=lineno
comment7.target=void\ printQ(int)
comment7.text=\r\n\ This\ method\ takes\ a\ line\ of\ text,\ splits\ in\ on\ commas,\ and\ stores\ it\ into\ an\r\n\ array.\ \ It\ then\ prints\ each\ element\ of\ the\ array\ at\ a\ specified\ location\ on\ the\r\n\ screen.\ \ For\ an\ actual\ game,\ you\ may\ want\ to\ use\ this\ same\ mechanism\ to\ populate\r\n\ an\ array\ list\ of\ question\ objects.\ \ That\ way\ you\ can\ manipulate\ them\ in\ your\ game\r\n\ by\ writing\ and\ using\ a\ series\ of\ question\ methods.\r\n
comment8.params=
comment8.target=int\ getMaxLines()
comment9.params=
comment9.target=java.lang.String\ getLines()
numComments=11
